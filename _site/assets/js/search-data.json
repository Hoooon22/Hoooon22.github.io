{"0": {
    "doc": "OOP",
    "title": "객체지향 프로그래밍",
    "content": " ",
    "url": "/docs/studies/object/02_OOP/#%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D",
    
    "relUrl": "/docs/studies/object/02_OOP/#객체지향-프로그래밍"
  },"1": {
    "doc": "OOP",
    "title": "2023.08.08 (TUE)",
    "content": ". ",
    "url": "/docs/studies/object/02_OOP/#20230808-tue",
    
    "relUrl": "/docs/studies/object/02_OOP/#20230808-tue"
  },"2": {
    "doc": "OOP",
    "title": "개요",
    "content": "객체지향은 객체를 지향하는 것이다. 대부분은 클래스를 결정한 후에 클래스에 어떤 속성과 메서드가 필요한지 생각한다. 하지만 이는 객체지향의 본질이 아니다. 객체지향은 말 그대로 객체를 지향하는 것이다. 클래스가 아닌 객체에 초점을 맞춰야 한다. 이를 위해선 다음을 중점적으로 살펴봐야 한다. 1️⃣ 어떤 클래스가 필요한지를 고민하기 전에, 어떤 객체들이 필요한지 고민하라. 일단 클래스와 객체의 차이점에 대해 살펴봐야 한다. 클래스는 공통적인 상태와 행동을 공유하는 객체들을 추상화한 것이다. 예를 들면, 붕어빵이라는 객체를 만들기 위해 붕어빵 틀이라는 클래스를 구현하였다고 할 수 있다. 클래스를 구현하기 위해서는 어떤 객체들이 어떤 상태와 행동들을 가지는지를 먼저 봐야 한다는 것이다. 2️⃣ 객체는 독립적인 존재가 아닌 기능을 구현하기 위해 협력하는 공동체의 일원이라고 생각한다. 유지보수 가능한, 유연한 객체지향 코드를 만들기 위해서는 객체들이 다른 객체들에게 도음을 주거나 의존하는 그림이 되어야 한다. 붕어빵과 붕어빵 틀처럼, 붕어빵 기계들의 부품들이 붕어빵 틀이 잘 돌아가게 하고, 그 붕어빵 틀이 질 좋은 붕어빵을 만들게 된다. ",
    "url": "/docs/studies/object/02_OOP/#%EA%B0%9C%EC%9A%94",
    
    "relUrl": "/docs/studies/object/02_OOP/#개요"
  },"3": {
    "doc": "OOP",
    "title": "도메인",
    "content": "도메인은 [문제를 해결하기 위해 사용자가 프로그램을 사용하는 분야]라고 할 수 있다. ",
    "url": "/docs/studies/object/02_OOP/#%EB%8F%84%EB%A9%94%EC%9D%B8",
    
    "relUrl": "/docs/studies/object/02_OOP/#도메인"
  },"4": {
    "doc": "OOP",
    "title": "OOP",
    "content": " ",
    "url": "/docs/studies/object/02_OOP/",
    
    "relUrl": "/docs/studies/object/02_OOP/"
  },"5": {
    "doc": "1일 1코딩 (코딩테스트)",
    "title": "1일 1코테연습",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/#1%EC%9D%BC-1%EC%BD%94%ED%85%8C%EC%97%B0%EC%8A%B5",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/#1일-1코테연습"
  },"6": {
    "doc": "1일 1코딩 (코딩테스트)",
    "title": "This Page has been written since July 11, 2023.",
    "content": ". | Links | . 이전 코테 연습 풀이 . ",
    "url": "/docs/studies/codingtest/1day1coding/#this-page-has-been-written-since-july-11-2023",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/#this-page-has-been-written-since-july-11-2023"
  },"7": {
    "doc": "1일 1코딩 (코딩테스트)",
    "title": "1일 1코딩 (코딩테스트)",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/"
  },"8": {
    "doc": "TIL (23-06-29)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230629/#til",
    
    "relUrl": "/docs/tils/230629/#til"
  },"9": {
    "doc": "TIL (23-06-29)",
    "title": "2023.06.29 (WED)",
    "content": ". 📌 오늘의 TIL . | 💻 깃허브 블로그 제작 . | just the Docs Theme 적용 및 틀 구현 | . | 🧑‍💻 퐁당 웹페이지 Ver.02 . | 구현 | . | . ✏️ 오늘의 체크 사항 . | 운동 - 가슴 | . ",
    "url": "/docs/tils/230629/#20230629-wed",
    
    "relUrl": "/docs/tils/230629/#20230629-wed"
  },"10": {
    "doc": "TIL (23-06-29)",
    "title": "TIL (23-06-29)",
    "content": " ",
    "url": "/docs/tils/230629/",
    
    "relUrl": "/docs/tils/230629/"
  },"11": {
    "doc": "TIL (23-07-02)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230702/#til",
    
    "relUrl": "/docs/tils/230702/#til"
  },"12": {
    "doc": "TIL (23-07-02)",
    "title": "2023.07.02 (SUN)",
    "content": ". 📌 오늘의 TIL . | 💻 깃허브 블로그 제작 . | 프로젝트 메뉴 생성 및 퐁당 웹매거진 프로젝트 업로드 | . | 🧑‍💻 퐁당 웹페이지 Ver.02 . | 동기화 매뉴얼 | . | . ✏️ 오늘의 체크 사항 . | 운동 - 등 | . ",
    "url": "/docs/tils/230702/#20230702-sun",
    
    "relUrl": "/docs/tils/230702/#20230702-sun"
  },"13": {
    "doc": "TIL (23-07-02)",
    "title": "TIL (23-07-02)",
    "content": " ",
    "url": "/docs/tils/230702/",
    
    "relUrl": "/docs/tils/230702/"
  },"14": {
    "doc": "제작 일지 <1>",
    "title": "퐁당 웹 매거진 프로젝트 제작 일지 &lt;1&gt;",
    "content": " ",
    "url": "/docs/projects/pongdang/230702/#%ED%90%81%EB%8B%B9-%EC%9B%B9-%EB%A7%A4%EA%B1%B0%EC%A7%84-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A0%9C%EC%9E%91-%EC%9D%BC%EC%A7%80-1",
    
    "relUrl": "/docs/projects/pongdang/230702/#퐁당-웹-매거진-프로젝트-제작-일지-1"
  },"15": {
    "doc": "제작 일지 <1>",
    "title": "2023.07.02 (WED)",
    "content": ". ",
    "url": "/docs/projects/pongdang/230702/#20230702-wed",
    
    "relUrl": "/docs/projects/pongdang/230702/#20230702-wed"
  },"16": {
    "doc": "제작 일지 <1>",
    "title": "1. 프로젝트 빌드 후, Servlet.service() for sevlet 오류 발생 시",
    "content": "해결법 1. 프로젝트 클린(clean)과 재빌드(rebuild)는 빌드 도구(Maven, Gradle 등)를 사용하여 프로젝트를 초기화하고 의존성을 새롭게 다운로드하여 프로젝트를 다시 빌드하는 작업입니다. 이를 통해 이전에 캐시된 클래스 파일이나 의존성 문제로 인해 발생하는 오류를 해결할 수 있습니다. 아래는 Maven과 Gradle에서 프로젝트 클린과 재빌드를 수행하는 방법입니다: . Maven을 사용하는 경우: . 프로젝트 디렉토리로 이동합니다. 명령줄 또는 터미널에서 다음 명령어를 실행합니다: mvn clean install clean: 이전 빌드에 의해 생성된 클래스 파일과 빌드 아티팩트를 제거합니다. install: 프로젝트를 빌드하고 로컬 Maven 저장소에 라이브러리를 설치합니다. Gradle을 사용하는 경우: . 프로젝트 디렉토리로 이동합니다. 명령줄 또는 터미널에서 다음 명령어를 실행합니다: gradlew clean build clean: 이전 빌드에 의해 생성된 클래스 파일과 빌드 아티팩트를 제거합니다. build: 프로젝트를 빌드하고 필요한 의존성을 다운로드합니다. 프로젝트 클린(clean)과 재빌드(rebuild)를 실행하면 이전에 발생한 빌드 오류와 관련된 문제를 해결할 수 있습니다. 이는 캐시된 클래스 파일이나 의존성이 변경되어 다시 다운로드되고 빌드되기 때문입니다. clean으로 재빌드 하니, 정상 작동한다. ",
    "url": "/docs/projects/pongdang/230702/#1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B9%8C%EB%93%9C-%ED%9B%84-servletservice-for-sevlet-%EC%98%A4%EB%A5%98-%EB%B0%9C%EC%83%9D-%EC%8B%9C",
    
    "relUrl": "/docs/projects/pongdang/230702/#1-프로젝트-빌드-후-servletservice-for-sevlet-오류-발생-시"
  },"17": {
    "doc": "제작 일지 <1>",
    "title": "2. 스프링부트 스냅샷 실행 시",
    "content": "nohup이 작동하지 않는다. java -jar build/libs/Pongdang_Server2-0.0.1-SNAPSHOT.jar &gt; test.log . 없이는 정상 작동한다. 3. 동기화 순서 . | ./gradlew clean build | pkill -f Pongdang_Server2-0.0.1-SNAPSHOT.jar | java -jar build/libs/Pongdang_Server2-0.0.1-SNAPSHOT.jar &gt; test.log &amp; | . ",
    "url": "/docs/projects/pongdang/230702/#2-%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EC%8A%A4%EB%83%85%EC%83%B7-%EC%8B%A4%ED%96%89-%EC%8B%9C",
    
    "relUrl": "/docs/projects/pongdang/230702/#2-스프링부트-스냅샷-실행-시"
  },"18": {
    "doc": "제작 일지 <1>",
    "title": "제작 일지 <1>",
    "content": " ",
    "url": "/docs/projects/pongdang/230702/",
    
    "relUrl": "/docs/projects/pongdang/230702/"
  },"19": {
    "doc": "TIL (23-07-06)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230706/#til",
    
    "relUrl": "/docs/tils/230706/#til"
  },"20": {
    "doc": "TIL (23-07-06)",
    "title": "2023.07.06 (THU)",
    "content": ". 📌 오늘의 TIL . | 🧑‍💻 퐁당 웹페이지 Ver.02 . | 회의 | 오늘의 제작 일지 | . | . ✏️ 오늘의 체크 사항 . | 운동 - 등 | . ",
    "url": "/docs/tils/230706/#20230706-thu",
    
    "relUrl": "/docs/tils/230706/#20230706-thu"
  },"21": {
    "doc": "TIL (23-07-06)",
    "title": "TIL (23-07-06)",
    "content": " ",
    "url": "/docs/tils/230706/",
    
    "relUrl": "/docs/tils/230706/"
  },"22": {
    "doc": "제작 일지 <2>",
    "title": "퐁당 웹 매거진 프로젝트 제작 일지 &lt;2&gt;",
    "content": " ",
    "url": "/docs/projects/pongdang/230706/#%ED%90%81%EB%8B%B9-%EC%9B%B9-%EB%A7%A4%EA%B1%B0%EC%A7%84-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A0%9C%EC%9E%91-%EC%9D%BC%EC%A7%80-2",
    
    "relUrl": "/docs/projects/pongdang/230706/#퐁당-웹-매거진-프로젝트-제작-일지-2"
  },"23": {
    "doc": "제작 일지 <2>",
    "title": "2023.07.06 (THU)",
    "content": ". ",
    "url": "/docs/projects/pongdang/230706/#20230706-thu",
    
    "relUrl": "/docs/projects/pongdang/230706/#20230706-thu"
  },"24": {
    "doc": "제작 일지 <2>",
    "title": "1. 메뉴 ul margin 없애기",
    "content": ".menu ul { width : 100%; list-style-type: none; display: flex; flex-direction: row; justify-content: space-around; padding-inline-start: 0; } .menu li { text-align: center; } . padding-inline-start로 왼쪽의 padding을 없애주었다. ",
    "url": "/docs/projects/pongdang/230706/#1-%EB%A9%94%EB%89%B4-ul-margin-%EC%97%86%EC%95%A0%EA%B8%B0",
    
    "relUrl": "/docs/projects/pongdang/230706/#1-메뉴-ul-margin-없애기"
  },"25": {
    "doc": "제작 일지 <2>",
    "title": "2. 기반 정리",
    "content": ". ",
    "url": "/docs/projects/pongdang/230706/#2-%EA%B8%B0%EB%B0%98-%EC%A0%95%EB%A6%AC",
    
    "relUrl": "/docs/projects/pongdang/230706/#2-기반-정리"
  },"26": {
    "doc": "제작 일지 <2>",
    "title": "3. 이후 계획",
    "content": "css or js 라이버리를 사용하여, 슬라이드 및 애니메이션 효과를 적용하도록 한다. ",
    "url": "/docs/projects/pongdang/230706/#3-%EC%9D%B4%ED%9B%84-%EA%B3%84%ED%9A%8D",
    
    "relUrl": "/docs/projects/pongdang/230706/#3-이후-계획"
  },"27": {
    "doc": "제작 일지 <2>",
    "title": "제작 일지 <2>",
    "content": " ",
    "url": "/docs/projects/pongdang/230706/",
    
    "relUrl": "/docs/projects/pongdang/230706/"
  },"28": {
    "doc": "과제 진행하기",
    "title": "과제 진행하기",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/230711/",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230711/"
  },"29": {
    "doc": "과제 진행하기",
    "title": "2023.07.11 (TUE)",
    "content": ". 문제 : 프로그래머스 - LV2. 과제 진행하기 . ",
    "url": "/docs/studies/codingtest/1day1coding/230711/#20230711-tue",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230711/#20230711-tue"
  },"30": {
    "doc": "과제 진행하기",
    "title": "접근법",
    "content": "조건 . | 과제는 시작하기로 한 시각이 되면 시작 | 새로운 과제를 할 시간이면, 기존에 하고 있던 과제를 멈추고 새로운 과제를 시작 . | 만약, 과제를 끝낸 시각에 우선순위는, 새로 시작해야 하는 과제 &gt; 잠시 멈춰둔 과제 | . | 멈춰둔 과제는 가장 최근에 멈춘 과제부터 시작 | . 해결법 . | plans 배열을 시작 시간을 기준으로 정렬한다. | 스택을 활용하여 잠시 멈춘 과제를 넣는다. | 조건 우선순위에 맞게 코드를 구현한다. | . ",
    "url": "/docs/studies/codingtest/1day1coding/230711/#%EC%A0%91%EA%B7%BC%EB%B2%95",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230711/#접근법"
  },"31": {
    "doc": "과제 진행하기",
    "title": "결과 코드",
    "content": "import java.util.*; class Solution { public String[] solution(String[][] plans) { String[] answer = new String[plans.length]; int answer_count = 0; Queue&lt;String&gt; q_name = new LinkedList&lt;&gt;(); Queue&lt;Integer&gt; q_time = new LinkedList&lt;&gt;(); // plans 정렬 Arrays.sort(plans, new Comparator&lt;String[]&gt;() { @Override public int compare(String[] arr1, String[] arr2) { String[] time1 = arr1[1].split(\":\"); String[] time2 = arr2[1].split(\":\"); int hourCompare = Integer.parseInt(time1[0]) - Integer.parseInt(time2[0]); int minuteCompare = Integer.parseInt(time1[1]) - Integer.parseInt(time2[1]); return hourCompare != 0 ? hourCompare : minuteCompare; } }); // 시작 시간 정하기 int curTime = toMin(plans[0]); // 현재 시각 String curPlan = plans[0][0]; // 현재 과제명 int remainTime = Integer.parseInt(plans[0][2]); // 현재 과제 남은 시간 int count = 1; // 대기 중인 과제 순서 Stack&lt;String&gt; s_String = new Stack&lt;&gt;(); // 잠시 멈춘 과제명 Stack&lt;Integer&gt; s_Int = new Stack&lt;&gt;(); // 잠시 멈춘 과제 남은 시간 // 진행 while (answer_count &lt; plans.length) { curTime++; remainTime--; if (remainTime == 0) { // 시간이 다 되면 answer[answer_count] = curPlan; answer_count++; curPlan = \"\"; if (curTime == toMin(plans[count])) { // 다음 과제 시간이라면 curPlan = plans[count][0]; remainTime = Integer.parseInt(plans[count][2]); count++; if (count == plans.length) { count = 0; } } else if (!s_String.empty()) { // 잠시 멈춘 과제가 있다면 curPlan = s_String.pop(); remainTime = s_Int.pop(); } } else if (curTime == toMin(plans[count])) { // 다음 과제를 시작해야 한다면 // 저장 if (!curPlan.equals(\"\")) { s_String.push(curPlan); s_Int.push(remainTime); } curPlan = plans[count][0]; remainTime = Integer.parseInt(plans[count][2]); count++; if (count == plans.length) { count = 0; } } } return answer; } public static int toMin(String[] strs) { String[] time = strs[1].split(\":\"); return Integer.parseInt(time[0]) * 60 + Integer.parseInt(time[1]); } } . ",
    "url": "/docs/studies/codingtest/1day1coding/230711/#%EA%B2%B0%EA%B3%BC-%EC%BD%94%EB%93%9C",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230711/#결과-코드"
  },"32": {
    "doc": "TIL (23-07-11)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230711/#til",
    
    "relUrl": "/docs/tils/230711/#til"
  },"33": {
    "doc": "TIL (23-07-11)",
    "title": "2023.07.11 (TUE)",
    "content": ". 📌  오늘의 TIL . | 프로그래머스 자바 코딩테스트 강의 신청 | 😵‍💫 코테 연습 . | 과제 진행하기 | . | . 📔 To Do Plan . | 1일 1코테연습 | 퐁당 매거진 프로젝트 | ? 백엔드 오픈소스 프로젝트 | ? 게임 서버 제작 | . ✏️  오늘의 체크 사항 . | 운동 - 어깨 | . ",
    "url": "/docs/tils/230711/#20230711-tue",
    
    "relUrl": "/docs/tils/230711/#20230711-tue"
  },"34": {
    "doc": "TIL (23-07-11)",
    "title": "TIL (23-07-11)",
    "content": " ",
    "url": "/docs/tils/230711/",
    
    "relUrl": "/docs/tils/230711/"
  },"35": {
    "doc": "제작 일지 <3>",
    "title": "퐁당 웹 매거진 프로젝트 제작 일지 &lt;3&gt;",
    "content": " ",
    "url": "/docs/projects/pongdang/230713/#%ED%90%81%EB%8B%B9-%EC%9B%B9-%EB%A7%A4%EA%B1%B0%EC%A7%84-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A0%9C%EC%9E%91-%EC%9D%BC%EC%A7%80-3",
    
    "relUrl": "/docs/projects/pongdang/230713/#퐁당-웹-매거진-프로젝트-제작-일지-3"
  },"36": {
    "doc": "제작 일지 <3>",
    "title": "2023.07.13 (THU)",
    "content": ". ",
    "url": "/docs/projects/pongdang/230713/#20230713-thu",
    
    "relUrl": "/docs/projects/pongdang/230713/#20230713-thu"
  },"37": {
    "doc": "제작 일지 <3>",
    "title": "1. Font CSS 적용",
    "content": " ",
    "url": "/docs/projects/pongdang/230713/#1-font-css-%EC%A0%81%EC%9A%A9",
    
    "relUrl": "/docs/projects/pongdang/230713/#1-font-css-적용"
  },"38": {
    "doc": "제작 일지 <3>",
    "title": "2. 부트스트랩 라이브러리 적용",
    "content": " ",
    "url": "/docs/projects/pongdang/230713/#2-%EB%B6%80%ED%8A%B8%EC%8A%A4%ED%8A%B8%EB%9E%A9-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%A0%81%EC%9A%A9",
    
    "relUrl": "/docs/projects/pongdang/230713/#2-부트스트랩-라이브러리-적용"
  },"39": {
    "doc": "제작 일지 <3>",
    "title": "제작 일지 <3>",
    "content": " ",
    "url": "/docs/projects/pongdang/230713/",
    
    "relUrl": "/docs/projects/pongdang/230713/"
  },"40": {
    "doc": "TIL (23-07-13)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230713/#til",
    
    "relUrl": "/docs/tils/230713/#til"
  },"41": {
    "doc": "TIL (23-07-13)",
    "title": "2023.07.13 (THU)",
    "content": ". 📌  오늘의 TIL . | 😵‍💫 코테 연습 . | 과제 진행하기 | . | 🧑‍💻 퐁당 웹페이지 Ver.02 . | 오늘의 제작 일지 | . | . ✏️  오늘의 체크 사항 . | 운동 - 어깨 | . ",
    "url": "/docs/tils/230713/#20230713-thu",
    
    "relUrl": "/docs/tils/230713/#20230713-thu"
  },"42": {
    "doc": "TIL (23-07-13)",
    "title": "TIL (23-07-13)",
    "content": " ",
    "url": "/docs/tils/230713/",
    
    "relUrl": "/docs/tils/230713/"
  },"43": {
    "doc": "제작 일지 <4>",
    "title": "퐁당 웹 매거진 프로젝트 제작 일지 &lt;4&gt;",
    "content": " ",
    "url": "/docs/projects/pongdang/230717/#%ED%90%81%EB%8B%B9-%EC%9B%B9-%EB%A7%A4%EA%B1%B0%EC%A7%84-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A0%9C%EC%9E%91-%EC%9D%BC%EC%A7%80-4",
    
    "relUrl": "/docs/projects/pongdang/230717/#퐁당-웹-매거진-프로젝트-제작-일지-4"
  },"44": {
    "doc": "제작 일지 <4>",
    "title": "2023.07.17 (MON)",
    "content": ". ",
    "url": "/docs/projects/pongdang/230717/#20230717-mon",
    
    "relUrl": "/docs/projects/pongdang/230717/#20230717-mon"
  },"45": {
    "doc": "제작 일지 <4>",
    "title": "1. 슬라이드",
    "content": ". 구현 코드 . import React, { useState } from 'react'; import \"./Slider.css\"; import Carousel from 'react-bootstrap/Carousel'; export default function Slider() { const [index, setIndex] = useState(0); const handleSelect = (selectedIndex) =&gt; { setIndex(selectedIndex); }; return ( &lt;Carousel activeIndex={index} onSelect={handleSelect}&gt; &lt;Carousel.Item&gt; &lt;img className=\"slideImage\" alt=\"slide_01\" src=\"/imgs/Main/Slider/Slider1.png\"/&gt; &lt;/Carousel.Item&gt; &lt;Carousel.Item&gt; &lt;img className=\"slideImage\" alt=\"slide_01\" src=\"/imgs/Main/Slider/Slider1.png\"/&gt; &lt;/Carousel.Item&gt; &lt;Carousel.Item&gt; &lt;img className=\"slideImage\" alt=\"slide_01\" src=\"/imgs/Main/Slider/Slider1.png\"/&gt; &lt;/Carousel.Item&gt; &lt;/Carousel&gt; ); } . ",
    "url": "/docs/projects/pongdang/230717/#1-%EC%8A%AC%EB%9D%BC%EC%9D%B4%EB%93%9C",
    
    "relUrl": "/docs/projects/pongdang/230717/#1-슬라이드"
  },"46": {
    "doc": "제작 일지 <4>",
    "title": "제작 일지 <4>",
    "content": " ",
    "url": "/docs/projects/pongdang/230717/",
    
    "relUrl": "/docs/projects/pongdang/230717/"
  },"47": {
    "doc": "TIL (23-07-17)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230717/#til",
    
    "relUrl": "/docs/tils/230717/#til"
  },"48": {
    "doc": "TIL (23-07-17)",
    "title": "2023.07.17 (MON)",
    "content": ". 📌  오늘의 TIL . | 😵‍💫 코테 연습 . | 과제 진행하기 | . | 🧑‍💻 퐁당 웹페이지 Ver.02 . | 오늘의 제작 일지 | . | . ✏️  오늘의 체크 사항 . | 운동 - 등 | . ",
    "url": "/docs/tils/230717/#20230717-mon",
    
    "relUrl": "/docs/tils/230717/#20230717-mon"
  },"49": {
    "doc": "TIL (23-07-17)",
    "title": "TIL (23-07-17)",
    "content": " ",
    "url": "/docs/tils/230717/",
    
    "relUrl": "/docs/tils/230717/"
  },"50": {
    "doc": "전력망을 둘로 나누기",
    "title": "과제 진행하기",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/230719/#%EA%B3%BC%EC%A0%9C-%EC%A7%84%ED%96%89%ED%95%98%EA%B8%B0",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230719/#과제-진행하기"
  },"51": {
    "doc": "전력망을 둘로 나누기",
    "title": "2023.07.19 (WED)",
    "content": ". 문제 : 프로그래머스 - LV2. 전력망을 둘로 나누기 . ",
    "url": "/docs/studies/codingtest/1day1coding/230719/#20230719-wed",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230719/#20230719-wed"
  },"52": {
    "doc": "전력망을 둘로 나누기",
    "title": "접근법",
    "content": "조건 및 설명 . | n개의 송전탑이 하나의 트리 형태로 연결 | 전선들 중 하나를 끊어서, 두 전력망이 갖게 되는 송전탑의 개수를 최대한 비슷하게 맞추고자 한다. | 두 전력망의 송전탑 개수의 차이를 return | . 해결법 . | 모두 탐색을 해도 되는 문제기 때문에, BFS를 사용한다. | 매번 가장 작은 값을 저장한다. | 자른 기준으로, 두 개의 노드를 탐색하여 갯수를 센다. | . ",
    "url": "/docs/studies/codingtest/1day1coding/230719/#%EC%A0%91%EA%B7%BC%EB%B2%95",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230719/#접근법"
  },"53": {
    "doc": "전력망을 둘로 나누기",
    "title": "결과 코드",
    "content": "import java.util.*; class Solution { public int solution(int n, int[][] wires) { int answer = -1; public static boolean[] visited = new boolean[n]; for (int i = 0; i &lt; n; i ++) { } return answer; } public static int bfs(int start, boolean[] visited) { Queue&lt;Integer&gt; q = new LinkedList&lt;&gt;(); q.offer(start); // current node visited visited[start] = true; while(!q.isEmpty()) { int x = q.poll(); for (int i = 0; i &lt; visited.length; i++) { // ... } } } } . ",
    "url": "/docs/studies/codingtest/1day1coding/230719/#%EA%B2%B0%EA%B3%BC-%EC%BD%94%EB%93%9C",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230719/#결과-코드"
  },"54": {
    "doc": "전력망을 둘로 나누기",
    "title": "전력망을 둘로 나누기",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/230719/",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230719/"
  },"55": {
    "doc": "(!) 경험치 - 정규식",
    "title": "(!)경험치 - 정규식",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/230720/#%EA%B2%BD%ED%97%98%EC%B9%98---%EC%A0%95%EA%B7%9C%EC%8B%9D",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230720/#경험치---정규식"
  },"56": {
    "doc": "(!) 경험치 - 정규식",
    "title": "2023.07.20 (THU)",
    "content": ". ",
    "url": "/docs/studies/codingtest/1day1coding/230720/#20230720-thu",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230720/#20230720-thu"
  },"57": {
    "doc": "(!) 경험치 - 정규식",
    "title": "코딩 테스트를 보았다.",
    "content": "쉬운 문제에서 나를 붙잡는 이슈가 생겨버렸다. ",
    "url": "/docs/studies/codingtest/1day1coding/230720/#%EC%BD%94%EB%94%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EB%B3%B4%EC%95%98%EB%8B%A4",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230720/#코딩-테스트를-보았다"
  },"58": {
    "doc": "(!) 경험치 - 정규식",
    "title": "정규식…",
    "content": "나는 지금까지 정규식에 대해 그렇게 깊이 알고 있지 않았다. 그 문제 또한, 사실 정규식이 없어도 풀 수 있는 문제라고 생각하고 풀었지만, 나의 엄청난 무지로 인해 계속 집착하게 되었다.. 문제의 코드다. str.split(\".\"); . 내 생각 : 외 않되..? (ㅋㅋ) . 자세히 알아보기 위해서는 split 함수에 대해서 알아보자. public String[] split(String regex) // 옳게된 함수 public String[] split(String string) // 멍청한 나의 머리에서 나온.. 나는 매개변수로 단지 string을 기준으로 나누는 함수 정도로 알고 있었다. 하지만 매개변수는 정규식이었다. 정규식에서의 ”.”은 개행 문자(\\n)을 제외한 모든 문자를 나타내는 메타 문자이다. 그래서 코드가 작동하지 않은건 당연한 것이였다.. 때문에 이스케이프 문자를 사용하여 다음과 같이 수정해야 한다. str.split(\"\\\\.\"); . 이런 사소한 지식들은 경험치처럼 쌓이고 쌓여, 나의 레벨업을 돕는다.. ",
    "url": "/docs/studies/codingtest/1day1coding/230720/#%EC%A0%95%EA%B7%9C%EC%8B%9D",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230720/#정규식"
  },"59": {
    "doc": "(!) 경험치 - 정규식",
    "title": "(!) 경험치 - 정규식",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/230720/",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230720/"
  },"60": {
    "doc": "TIL (23-07-20)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230720/#til",
    
    "relUrl": "/docs/tils/230720/#til"
  },"61": {
    "doc": "TIL (23-07-20)",
    "title": "2023.07.20 (THU)",
    "content": ". 📌  오늘의 TIL . | 😵‍💫 코테 피드백 . | (!) 경험치 - 정규식 | . | . ✏️  오늘의 체크 사항 . | 운동 - 등 | . ",
    "url": "/docs/tils/230720/#20230720-thu",
    
    "relUrl": "/docs/tils/230720/#20230720-thu"
  },"62": {
    "doc": "TIL (23-07-20)",
    "title": "TIL (23-07-20)",
    "content": " ",
    "url": "/docs/tils/230720/",
    
    "relUrl": "/docs/tils/230720/"
  },"63": {
    "doc": "TIL (23-07-25)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230725/#til",
    
    "relUrl": "/docs/tils/230725/#til"
  },"64": {
    "doc": "TIL (23-07-25)",
    "title": "2023.07.25 (TUE)",
    "content": ". 📌  오늘의 TIL . | 🧑‍💻 퐁당 웹페이지 Ver.02 . | 오늘의 제작 일지 | . | . ✏️  오늘의 체크 사항 . | 운동 - 어꺠 | . ",
    "url": "/docs/tils/230725/#20230725-tue",
    
    "relUrl": "/docs/tils/230725/#20230725-tue"
  },"65": {
    "doc": "TIL (23-07-25)",
    "title": "TIL (23-07-25)",
    "content": " ",
    "url": "/docs/tils/230725/",
    
    "relUrl": "/docs/tils/230725/"
  },"66": {
    "doc": "제작 일지 <5>",
    "title": "퐁당 웹 매거진 프로젝트 제작 일지 &lt;5&gt;",
    "content": " ",
    "url": "/docs/projects/pongdang/230725/#%ED%90%81%EB%8B%B9-%EC%9B%B9-%EB%A7%A4%EA%B1%B0%EC%A7%84-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A0%9C%EC%9E%91-%EC%9D%BC%EC%A7%80-5",
    
    "relUrl": "/docs/projects/pongdang/230725/#퐁당-웹-매거진-프로젝트-제작-일지-5"
  },"67": {
    "doc": "제작 일지 <5>",
    "title": "2023.07.25 (TUE)",
    "content": ". ",
    "url": "/docs/projects/pongdang/230725/#20230725-tue",
    
    "relUrl": "/docs/projects/pongdang/230725/#20230725-tue"
  },"68": {
    "doc": "제작 일지 <5>",
    "title": "1. 슬라이드",
    "content": ". 구현 코드 . import React, { useState } from 'react'; import \"./Slider.css\"; import Carousel from 'react-bootstrap/Carousel'; export default function Slider() { const [index, setIndex] = useState(0); const handleSelect = (selectedIndex) =&gt; { setIndex(selectedIndex); }; return ( &lt;Carousel activeIndex={index} onSelect={handleSelect}&gt; &lt;Carousel.Item&gt; &lt;img className=\"slideImage\" alt=\"slide_01\" src=\"/imgs/Main/Slider/Slider1.png\"/&gt; &lt;/Carousel.Item&gt; &lt;Carousel.Item&gt; &lt;img className=\"slideImage\" alt=\"slide_01\" src=\"/imgs/Main/Slider/Slider1.png\"/&gt; &lt;/Carousel.Item&gt; &lt;Carousel.Item&gt; &lt;img className=\"slideImage\" alt=\"slide_01\" src=\"/imgs/Main/Slider/Slider1.png\"/&gt; &lt;/Carousel.Item&gt; &lt;/Carousel&gt; ); } . ",
    "url": "/docs/projects/pongdang/230725/#1-%EC%8A%AC%EB%9D%BC%EC%9D%B4%EB%93%9C",
    
    "relUrl": "/docs/projects/pongdang/230725/#1-슬라이드"
  },"69": {
    "doc": "제작 일지 <5>",
    "title": "제작 일지 <5>",
    "content": " ",
    "url": "/docs/projects/pongdang/230725/",
    
    "relUrl": "/docs/projects/pongdang/230725/"
  },"70": {
    "doc": "제작 일지 <6>",
    "title": "퐁당 웹 매거진 프로젝트 제작 일지 &lt;6&gt;",
    "content": " ",
    "url": "/docs/projects/pongdang/230731/#%ED%90%81%EB%8B%B9-%EC%9B%B9-%EB%A7%A4%EA%B1%B0%EC%A7%84-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A0%9C%EC%9E%91-%EC%9D%BC%EC%A7%80-6",
    
    "relUrl": "/docs/projects/pongdang/230731/#퐁당-웹-매거진-프로젝트-제작-일지-6"
  },"71": {
    "doc": "제작 일지 <6>",
    "title": "2023.07.31 (MON)",
    "content": ". ",
    "url": "/docs/projects/pongdang/230731/#20230731-mon",
    
    "relUrl": "/docs/projects/pongdang/230731/#20230731-mon"
  },"72": {
    "doc": "제작 일지 <6>",
    "title": "1. 슬라이드 재조정",
    "content": "사이드 버튼들을 투명화 시켜, 조금 더 자연스럽게 만들어 준다. ",
    "url": "/docs/projects/pongdang/230731/#1-%EC%8A%AC%EB%9D%BC%EC%9D%B4%EB%93%9C-%EC%9E%AC%EC%A1%B0%EC%A0%95",
    
    "relUrl": "/docs/projects/pongdang/230731/#1-슬라이드-재조정"
  },"73": {
    "doc": "제작 일지 <6>",
    "title": "제작 일지 <6>",
    "content": " ",
    "url": "/docs/projects/pongdang/230731/",
    
    "relUrl": "/docs/projects/pongdang/230731/"
  },"74": {
    "doc": "TIL (23-07-31)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230731/#til",
    
    "relUrl": "/docs/tils/230731/#til"
  },"75": {
    "doc": "TIL (23-07-31)",
    "title": "2023.07.25 (MON)",
    "content": ". 📌  오늘의 TIL . | 🧑‍💻 퐁당 웹페이지 Ver.02 . | 오늘의 제작 일지 | . | . ✏️  오늘의 체크 사항 . | 운동 - 어꺠 | . ",
    "url": "/docs/tils/230731/#20230725-mon",
    
    "relUrl": "/docs/tils/230731/#20230725-mon"
  },"76": {
    "doc": "TIL (23-07-31)",
    "title": "TIL (23-07-31)",
    "content": " ",
    "url": "/docs/tils/230731/",
    
    "relUrl": "/docs/tils/230731/"
  },"77": {
    "doc": "TIL (23-08-08)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230808/#til",
    
    "relUrl": "/docs/tils/230808/#til"
  },"78": {
    "doc": "TIL (23-08-08)",
    "title": "2023.08.08 (TUE)",
    "content": ". 📔 To Do . | 1일 1코테연습 | 책 “오브젝트” | 퐁당 매거진 프로젝트 | . 📌  오늘의 TIL . | !! | . ✏️  오늘의 체크 사항 . | 운동 - 어꺠 | . ",
    "url": "/docs/tils/230808/#20230808-tue",
    
    "relUrl": "/docs/tils/230808/#20230808-tue"
  },"79": {
    "doc": "TIL (23-08-08)",
    "title": "TIL (23-08-08)",
    "content": " ",
    "url": "/docs/tils/230808/",
    
    "relUrl": "/docs/tils/230808/"
  },"80": {
    "doc": "제작 일지 <7>",
    "title": "퐁당 웹 매거진 프로젝트 제작 일지 &lt;7&gt;",
    "content": " ",
    "url": "/docs/projects/pongdang/230816/#%ED%90%81%EB%8B%B9-%EC%9B%B9-%EB%A7%A4%EA%B1%B0%EC%A7%84-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A0%9C%EC%9E%91-%EC%9D%BC%EC%A7%80-7",
    
    "relUrl": "/docs/projects/pongdang/230816/#퐁당-웹-매거진-프로젝트-제작-일지-7"
  },"81": {
    "doc": "제작 일지 <7>",
    "title": "2023.08.16 (WED)",
    "content": ". ",
    "url": "/docs/projects/pongdang/230816/#20230816-wed",
    
    "relUrl": "/docs/projects/pongdang/230816/#20230816-wed"
  },"82": {
    "doc": "제작 일지 <7>",
    "title": "1. 메인페이지 1차 완성",
    "content": ". | 퐁당 매거진 홈페이지 | . 전체적으로 사이즈를 키웠고, 요구사항에 맞는 디자인을 하였다. 새롭게 깨달은 점은, 리액트에서 컴포넌트를 모을 때, ClassName을 다른 모듈이더라도 같은 이름을 쓰면 안된다는 것이였다. 이것 때문에 충돌나서 헤맸던 적이.. ",
    "url": "/docs/projects/pongdang/230816/#1-%EB%A9%94%EC%9D%B8%ED%8E%98%EC%9D%B4%EC%A7%80-1%EC%B0%A8-%EC%99%84%EC%84%B1",
    
    "relUrl": "/docs/projects/pongdang/230816/#1-메인페이지-1차-완성"
  },"83": {
    "doc": "제작 일지 <7>",
    "title": "제작 일지 <7>",
    "content": " ",
    "url": "/docs/projects/pongdang/230816/",
    
    "relUrl": "/docs/projects/pongdang/230816/"
  },"84": {
    "doc": "TIL (23-08-16)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230816/#til",
    
    "relUrl": "/docs/tils/230816/#til"
  },"85": {
    "doc": "TIL (23-08-16)",
    "title": "2023.08.08 (WED)",
    "content": ". 📔 To Do . | 1일 1코테연습 | 퐁당 매거진 프로젝트 | AWS 자격증 시험 | 책 “오브젝트” | . 📌  오늘의 TIL . | 🧑‍💻 퐁당 웹페이지 Ver.02 . | 오늘의 제작 일지 | . | . ✏️  오늘의 체크 사항 . | 운동 - 가슴 | . ",
    "url": "/docs/tils/230816/#20230808-wed",
    
    "relUrl": "/docs/tils/230816/#20230808-wed"
  },"86": {
    "doc": "TIL (23-08-16)",
    "title": "TIL (23-08-16)",
    "content": " ",
    "url": "/docs/tils/230816/",
    
    "relUrl": "/docs/tils/230816/"
  },"87": {
    "doc": "숫자 게임",
    "title": "숫자 게임",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/230819/",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230819/"
  },"88": {
    "doc": "숫자 게임",
    "title": "2023.08.19 (SAT)",
    "content": ". 문제 : 프로그래머스 - LV3. 숫자 게임 . ",
    "url": "/docs/studies/codingtest/1day1coding/230819/#20230819-sat",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230819/#20230819-sat"
  },"89": {
    "doc": "숫자 게임",
    "title": "조건 및 설명",
    "content": ". | N명의 팀원 | . ",
    "url": "/docs/studies/codingtest/1day1coding/230819/#%EC%A1%B0%EA%B1%B4-%EB%B0%8F-%EC%84%A4%EB%AA%85",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230819/#조건-및-설명"
  },"90": {
    "doc": "숫자 게임",
    "title": "접근법",
    "content": ". | 남은 팀원들 중, 최소한의 숫자로 이길 수 있는 사람으로 대려감 | 두 배열을 Sort 후, 앞에서부터 서로 비교하여 count | . ",
    "url": "/docs/studies/codingtest/1day1coding/230819/#%EC%A0%91%EA%B7%BC%EB%B2%95",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230819/#접근법"
  },"91": {
    "doc": "숫자 게임",
    "title": "결과 코드",
    "content": "import java.util.*; class Solution { public int solution(int[] A, int[] B) { int answer = 0; int count = 0; Arrays.sort(A); Arrays.sort(B); // Game Start for (int i = 0; i &lt; A.length; i++) { for (int j = count; j &lt; A.length; j++) { if (A[i] &lt; B[j]) { // 이기면 answer++; count++; break; } else { // 비기거나 지면 count++; } } } return answer; } } . ",
    "url": "/docs/studies/codingtest/1day1coding/230819/#%EA%B2%B0%EA%B3%BC-%EC%BD%94%EB%93%9C",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230819/#결과-코드"
  },"92": {
    "doc": "이론 일지 <1>",
    "title": "게임 서버 토이 프로젝트 - 이론 일지 &lt;1&gt;",
    "content": " ",
    "url": "/docs/projects/gameServer/230819/#%EA%B2%8C%EC%9E%84-%EC%84%9C%EB%B2%84-%ED%86%A0%EC%9D%B4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8---%EC%9D%B4%EB%A1%A0-%EC%9D%BC%EC%A7%80-1",
    
    "relUrl": "/docs/projects/gameServer/230819/#게임-서버-토이-프로젝트---이론-일지-1"
  },"93": {
    "doc": "이론 일지 <1>",
    "title": "2023.08.19 (SAT)",
    "content": ". ",
    "url": "/docs/projects/gameServer/230819/#20230819-sat",
    
    "relUrl": "/docs/projects/gameServer/230819/#20230819-sat"
  },"94": {
    "doc": "이론 일지 <1>",
    "title": "1. 프로세스",
    "content": "프로그램에 있는 코드와 데이터를 프로세스 메모리로 불러들이는데, 이를 로딩된다고 할 수 있다. 프로세스는 RAM에 있다. 프로세스가 여러 개 실행되고 있는 것을 멀티프로세싱이라고 한다. ",
    "url": "/docs/projects/gameServer/230819/#1-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4",
    
    "relUrl": "/docs/projects/gameServer/230819/#1-프로세스"
  },"95": {
    "doc": "이론 일지 <1>",
    "title": "2. 스레드",
    "content": "기본 적으로 서로 다른 프로세스는 상대방의 메모리 공간을 읽고 쓸 수 없다. 하미잔, 한 프로세스 안에 있는 스레드들은, 프로세스 안에 있는 메모리 공간을 같이 사용할 수 있다. 스레드 = 프로그램이 실행되는 기본 단위 . ",
    "url": "/docs/projects/gameServer/230819/#2-%EC%8A%A4%EB%A0%88%EB%93%9C",
    
    "relUrl": "/docs/projects/gameServer/230819/#2-스레드"
  },"96": {
    "doc": "이론 일지 <1>",
    "title": "이론 일지 <1>",
    "content": " ",
    "url": "/docs/projects/gameServer/230819/",
    
    "relUrl": "/docs/projects/gameServer/230819/"
  },"97": {
    "doc": "TIL (23-08-19)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230819/#til",
    
    "relUrl": "/docs/tils/230819/#til"
  },"98": {
    "doc": "TIL (23-08-19)",
    "title": "2023.08.19 (SAT)",
    "content": ". 📔 To Do (반드시!!) . | 1일 1코테연습 . | 숫자 게임 | . | AWS 자격증 시험 | 책 “오브젝트” | 퐁당 매거진 프로젝트 (업로드 사항 있을 경우) | . 😄 Want To Do (하고 싶은 것) . | 게임 서버 개발 . | 프로젝트 계획 | . | 마인크래프트 코드 개조 해보기 | 깃헙 블로그 포트폴리오 | 지원서 넣기 | . ",
    "url": "/docs/tils/230819/#20230819-sat",
    
    "relUrl": "/docs/tils/230819/#20230819-sat"
  },"99": {
    "doc": "TIL (23-08-19)",
    "title": "TIL (23-08-19)",
    "content": " ",
    "url": "/docs/tils/230819/",
    
    "relUrl": "/docs/tils/230819/"
  },"100": {
    "doc": "프로젝트 계획",
    "title": "게임 서버 토이 프로젝트 - 프로젝트 계획",
    "content": " ",
    "url": "/docs/projects/gameServer/230819_2/#%EA%B2%8C%EC%9E%84-%EC%84%9C%EB%B2%84-%ED%86%A0%EC%9D%B4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8---%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B3%84%ED%9A%8D",
    
    "relUrl": "/docs/projects/gameServer/230819_2/#게임-서버-토이-프로젝트---프로젝트-계획"
  },"101": {
    "doc": "프로젝트 계획",
    "title": "2023.08.19 (SAT)",
    "content": ". ",
    "url": "/docs/projects/gameServer/230819_2/#20230819-sat",
    
    "relUrl": "/docs/projects/gameServer/230819_2/#20230819-sat"
  },"102": {
    "doc": "프로젝트 계획",
    "title": "프레임워크",
    "content": "서버(스프링부트) + 게임 프레임워크(LibGDX, 일단 써보기) . ",
    "url": "/docs/projects/gameServer/230819_2/#%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC",
    
    "relUrl": "/docs/projects/gameServer/230819_2/#프레임워크"
  },"103": {
    "doc": "프로젝트 계획",
    "title": "순서",
    "content": ". | 스프링 부트 프로젝트 생성: 우선 스프링 부트 프로젝트를 생성합니다. Spring Initializr를 이용하면 간단하게 프로젝트를 생성할 수 있습니다. https://start.spring.io/ | 게임 개발 프레임워크 선택: 자바 게임 개발에서는 여러 가지 프레임워크와 라이브러리를 사용할 수 있습니다. 대표적인 예로는 LibGDX, jMonkeyEngine, LWJGL 등이 있습니다. 이 중에서 가장 인기 있는 LibGDX를 선택하고 해당 라이브러리를 스프링 부트 프로젝트에 포함시킵니다. | 게임 API 연결: 선택한 게임 프레임워크의 API를 스프링 부트에 연결합니다. 이를 위해서는 라이브러리를 확인하고 관련 API 연동 방법을 찾아보는 것이 좋습니다. | 게임 서버 개발: 스프링 부트를 이용하여 게임 서버를 구현합니다. 게임 프레임워크에서 제공하는 서버 기능을 활용하여 스프링 부트 서버와 연동합니다. | 게임 클라이언트 개발: 게임 클라이언트에서는 개발한 스프링 부트 서버와 통신하여 게임을 실행합니다. HTTP와 WebSocket을 이용하여 통신할 수 있습니다. | 요청과 응답 처리: 게임 클라이언트에서 서버로 요청을 보내고, 서버에서는 그에 대한 응답을 처리합니다. 스프링 부트에서 HTTP 요청 및 WebSocket 연결을 처리하는 Controller를 개발하면 됩니다. 이러한 방법으로 스프링 부트와 자바 게임 개발을 연결할 수 있습니다. 하지만, 이는 어려운 작업이므로 충분한 경험과 지식이 필요합니다. 또한, 자바 게임 개발과 스프링 부트가 서로 다른 도메인이므로 그에 따른 요구사항과 성능 이슈 등을 고려해야 합니다. | . ",
    "url": "/docs/projects/gameServer/230819_2/#%EC%88%9C%EC%84%9C",
    
    "relUrl": "/docs/projects/gameServer/230819_2/#순서"
  },"104": {
    "doc": "프로젝트 계획",
    "title": "프로젝트 계획",
    "content": " ",
    "url": "/docs/projects/gameServer/230819_2/",
    
    "relUrl": "/docs/projects/gameServer/230819_2/"
  },"105": {
    "doc": "GDX 프로젝트 생성 및 개발 시작",
    "title": "게임 서버 토이 프로젝트 - 프로젝트 계획",
    "content": " ",
    "url": "/docs/projects/gameServer/230822/#%EA%B2%8C%EC%9E%84-%EC%84%9C%EB%B2%84-%ED%86%A0%EC%9D%B4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8---%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B3%84%ED%9A%8D",
    
    "relUrl": "/docs/projects/gameServer/230822/#게임-서버-토이-프로젝트---프로젝트-계획"
  },"106": {
    "doc": "GDX 프로젝트 생성 및 개발 시작",
    "title": "2023.08.22 (TUE)",
    "content": ". ",
    "url": "/docs/projects/gameServer/230822/#20230822-tue",
    
    "relUrl": "/docs/projects/gameServer/230822/#20230822-tue"
  },"107": {
    "doc": "GDX 프로젝트 생성 및 개발 시작",
    "title": "기본 세팅 끝",
    "content": " ",
    "url": "/docs/projects/gameServer/230822/#%EA%B8%B0%EB%B3%B8-%EC%84%B8%ED%8C%85-%EB%81%9D",
    
    "relUrl": "/docs/projects/gameServer/230822/#기본-세팅-끝"
  },"108": {
    "doc": "GDX 프로젝트 생성 및 개발 시작",
    "title": "개발 순서 설계",
    "content": ". | 맵, 플레이어 만들기 | 서버 연결 (2023.08.24 ~) | . ",
    "url": "/docs/projects/gameServer/230822/#%EA%B0%9C%EB%B0%9C-%EC%88%9C%EC%84%9C-%EC%84%A4%EA%B3%84",
    
    "relUrl": "/docs/projects/gameServer/230822/#개발-순서-설계"
  },"109": {
    "doc": "GDX 프로젝트 생성 및 개발 시작",
    "title": "GDX 프로젝트 생성 및 개발 시작",
    "content": " ",
    "url": "/docs/projects/gameServer/230822/",
    
    "relUrl": "/docs/projects/gameServer/230822/"
  },"110": {
    "doc": "TIL (23-08-24)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230824/#til",
    
    "relUrl": "/docs/tils/230824/#til"
  },"111": {
    "doc": "TIL (23-08-24)",
    "title": "2023.08.24 (SAT)",
    "content": ". 📔 To Do (반드시!!) . | AWS 자격증 시험 . | 기본 요약 | . | . 😄 Want To Do (하고 싶은 것) . | 게임 서버 개발 . | 프로젝트 계획 | . | . ",
    "url": "/docs/tils/230824/#20230824-sat",
    
    "relUrl": "/docs/tils/230824/#20230824-sat"
  },"112": {
    "doc": "TIL (23-08-24)",
    "title": "TIL (23-08-24)",
    "content": " ",
    "url": "/docs/tils/230824/",
    
    "relUrl": "/docs/tils/230824/"
  },"113": {
    "doc": "TIL (23-08-30)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230830/#til",
    
    "relUrl": "/docs/tils/230830/#til"
  },"114": {
    "doc": "TIL (23-08-30)",
    "title": "2023.08.30 (WED)",
    "content": ". 📔 To Do (반드시!!) . | 1일 1코테연습 . | One Walk | 입력 할 때는, Scanner보다 BufferedReader가 훨씬 빠르다! . | BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); . | . | . | AWS 자격증 시험 . | 기본 요약 | . | . 😄 Want To Do (하고 싶은 것) . ",
    "url": "/docs/tils/230830/#20230830-wed",
    
    "relUrl": "/docs/tils/230830/#20230830-wed"
  },"115": {
    "doc": "TIL (23-08-30)",
    "title": "TIL (23-08-30)",
    "content": " ",
    "url": "/docs/tils/230830/",
    
    "relUrl": "/docs/tils/230830/"
  },"116": {
    "doc": "One Walk",
    "title": "One Walk",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/230830/",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230830/"
  },"117": {
    "doc": "One Walk",
    "title": "2023.08.19 (SAT)",
    "content": ". 문제 : 백준 - 29333. One Walk . ",
    "url": "/docs/studies/codingtest/1day1coding/230830/#20230819-sat",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230830/#20230819-sat"
  },"118": {
    "doc": "One Walk",
    "title": "조건 및 설명",
    "content": ". | 무방향 단순 그래프 G | 주어지는 변수 : 정점의 개수 N, 간선의 개수 M, 시작점 번호 S, 도착점 번호 E | 그 다음은 M개의 줄에서 간선으로 연결된 두 정점의 번호(u,v)가 주어진다. | 단 하나가 되도록 만들 수 없다면 -1을 출력, 그렇지 않으면 모든 간선의 방향을 입력된 순서대로 한 줄에 출력 (u -&gt; v : 0, v -&gt; u : 1) | . ",
    "url": "/docs/studies/codingtest/1day1coding/230830/#%EC%A1%B0%EA%B1%B4-%EB%B0%8F-%EC%84%A4%EB%AA%85",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230830/#조건-및-설명"
  },"119": {
    "doc": "One Walk",
    "title": "접근법",
    "content": ". | 시작점부터 시작하여, 도착점까지 한 가지만 나오는 경우를 탐색한다. | 이럴 때는, | . ",
    "url": "/docs/studies/codingtest/1day1coding/230830/#%EC%A0%91%EA%B7%BC%EB%B2%95",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230830/#접근법"
  },"120": {
    "doc": "One Walk",
    "title": "결과 코드",
    "content": "import java.util.*; import java.io.*; public class Main { public static void main(String[] args) throws Exception { int N, M, S, E; BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer st = new StringTokenizer(br.readLine()); N = Integer.parseInt(st.nextToken()); M = Integer.parseInt(st.nextToken()); S = Integer.parseInt(st.nextToken()) - 1; E = Integer.parseInt(st.nextToken()) - 1; int[] answer = new int[M]; int[][] edge = new int[M][2]; for (int i = 0; i &lt; M; i++) { st = new StringTokenizer(br.readLine()); edge[i][0] = Integer.parseInt(st.nextToken()) - 1; edge[i][1] = Integer.parseInt(st.nextToken()) - 1; } } } . ",
    "url": "/docs/studies/codingtest/1day1coding/230830/#%EA%B2%B0%EA%B3%BC-%EC%BD%94%EB%93%9C",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230830/#결과-코드"
  },"121": {
    "doc": "TIL (23-09-01)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230901/#til",
    
    "relUrl": "/docs/tils/230901/#til"
  },"122": {
    "doc": "TIL (23-09-01)",
    "title": "2023.09.01 (FRI)",
    "content": ". 📔 To Do (반드시!!) . | 1일 1코테연습 . | One Walk | . | AWS 자격증 시험 . | 기본 요약 | . | . 😄 Want To Do (하고 싶은 것) . ",
    "url": "/docs/tils/230901/#20230901-fri",
    
    "relUrl": "/docs/tils/230901/#20230901-fri"
  },"123": {
    "doc": "TIL (23-09-01)",
    "title": "TIL (23-09-01)",
    "content": " ",
    "url": "/docs/tils/230901/",
    
    "relUrl": "/docs/tils/230901/"
  },"124": {
    "doc": "TIL (23-09-04)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230904/#til",
    
    "relUrl": "/docs/tils/230904/#til"
  },"125": {
    "doc": "TIL (23-09-04)",
    "title": "2023.09.04 (MON)",
    "content": ". 📔 To Do (반드시!!) . | 1일 1코테연습 . | One Walk | . | AWS 자격증 시험 . | 기본 요약 - 1 | 기본 요약 - 2 | 기본 요약 - 3 | . | . 😄 Want To Do (하고 싶은 것) . ",
    "url": "/docs/tils/230904/#20230904-mon",
    
    "relUrl": "/docs/tils/230904/#20230904-mon"
  },"126": {
    "doc": "TIL (23-09-04)",
    "title": "TIL (23-09-04)",
    "content": " ",
    "url": "/docs/tils/230904/",
    
    "relUrl": "/docs/tils/230904/"
  },"127": {
    "doc": "TIL (23-09-04)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230905/#til",
    
    "relUrl": "/docs/tils/230905/#til"
  },"128": {
    "doc": "TIL (23-09-04)",
    "title": "2023.09.04 (MON)",
    "content": ". 📔 To Do (반드시!!) . | 1일 1코테연습 . | One Walk | . | AWS 자격증 시험 . | 기본 요약 - 3 | . | . 😄 Want To Do (하고 싶은 것) . ",
    "url": "/docs/tils/230905/#20230904-mon",
    
    "relUrl": "/docs/tils/230905/#20230904-mon"
  },"129": {
    "doc": "TIL (23-09-04)",
    "title": "TIL (23-09-04)",
    "content": " ",
    "url": "/docs/tils/230905/",
    
    "relUrl": "/docs/tils/230905/"
  },"130": {
    "doc": "제작 일지 <8>",
    "title": "퐁당 웹 매거진 프로젝트 제작 일지 &lt;8&gt;",
    "content": " ",
    "url": "/docs/projects/pongdang/230906/#%ED%90%81%EB%8B%B9-%EC%9B%B9-%EB%A7%A4%EA%B1%B0%EC%A7%84-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A0%9C%EC%9E%91-%EC%9D%BC%EC%A7%80-8",
    
    "relUrl": "/docs/projects/pongdang/230906/#퐁당-웹-매거진-프로젝트-제작-일지-8"
  },"131": {
    "doc": "제작 일지 <8>",
    "title": "2023.09.07 (WED)",
    "content": ". ",
    "url": "/docs/projects/pongdang/230906/#20230907-wed",
    
    "relUrl": "/docs/projects/pongdang/230906/#20230907-wed"
  },"132": {
    "doc": "제작 일지 <8>",
    "title": "1. 라우팅 처리",
    "content": "스프링부트와 리액트를 함꼐 쓰는 중에, 다른 페이지로 가기 위한 라우팅을 해야할 때가 왔다. 1-1. 리액트 . 리액트에서는 컴포넌트로 나누어 App.js에서 라우팅 처리를 한다. function App() { return ( &lt;BrowserRouter&gt; &lt;div className=\"App\"&gt; &lt;Route path=\"/\" exact component={Main}&gt;&lt;/Route&gt; &lt;Route path=\"/test\" component={Test}&gt;&lt;/Route&gt; &lt;/div&gt; &lt;/BrowserRouter&gt; ); } . 1-2. 스프링부트 . 로컬에서는 ‘/’, ‘/test’ 모두 접속이 가능하다. 하지만 스프링부트에 연결한 서버에 접속하면, ‘/test’엔 접속이 되지 않고 404에러가 나온다. Controller를 사용하면 이 문제가 해결된다. 일단 임시로 모든 경로를 연결해준다. @Controller public class WebController implements ErrorController { @RequestMapping({\"/{path:[^\\\\.]*}\"}) public String redirect() { return \"forward:/\"; } } . ",
    "url": "/docs/projects/pongdang/230906/#1-%EB%9D%BC%EC%9A%B0%ED%8C%85-%EC%B2%98%EB%A6%AC",
    
    "relUrl": "/docs/projects/pongdang/230906/#1-라우팅-처리"
  },"133": {
    "doc": "제작 일지 <8>",
    "title": "제작 일지 <8>",
    "content": " ",
    "url": "/docs/projects/pongdang/230906/",
    
    "relUrl": "/docs/projects/pongdang/230906/"
  },"134": {
    "doc": "적록색약",
    "title": "적록색약",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/230911/",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230911/"
  },"135": {
    "doc": "적록색약",
    "title": "2023.09.11 (MON)",
    "content": ". 문제 : 백준 - 10026. 적록색약 . ",
    "url": "/docs/studies/codingtest/1day1coding/230911/#20230911-mon",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230911/#20230911-mon"
  },"136": {
    "doc": "적록색약",
    "title": "조건 및 설명",
    "content": " ",
    "url": "/docs/studies/codingtest/1day1coding/230911/#%EC%A1%B0%EA%B1%B4-%EB%B0%8F-%EC%84%A4%EB%AA%85",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230911/#조건-및-설명"
  },"137": {
    "doc": "적록색약",
    "title": "접근법",
    "content": ". | 두 가지(색약, 색약이 아닌)으로 나눈다. | BFS로 한 구역씩 정한다. | . ",
    "url": "/docs/studies/codingtest/1day1coding/230911/#%EC%A0%91%EA%B7%BC%EB%B2%95",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230911/#접근법"
  },"138": {
    "doc": "적록색약",
    "title": "결과 코드",
    "content": "import java.util.*; import java.io.*; public class Main { static char[][] map; static boolean[][] visited; static ArrayDeque&lt;Char&gt; queue = new ArrayDeque&lt;&gt;(); static int no_Cb = 0; static int yes_Cb = 0; public static void main(String[] args) throws Exception { int size; BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer st = new StringTokenizer(br.readLine()); size = Integer.parseInt(st.nextToken()); // input size // init map = new char[size][size]; bvisited = new boolean[size][size]; // input for (int i = 0; i &lt; size; i++) { st = new StringTokenizer(br.readLine()); String str = st.nextToken(); for (int j = 0; j &lt; size; j++) { map[i][j] = str.charAt(j); visited[i][j] = false; } } } // 1. no Color blindness public static int bfs_no(int start_x, int start_y char[][] map, boolean[][] visited) { visited[start_x][start_y] = true; queue.add(map[start_x][start_y]); while (!queue.isEmpty()) { char ch = queue.poll(); } } } . ",
    "url": "/docs/studies/codingtest/1day1coding/230911/#%EA%B2%B0%EA%B3%BC-%EC%BD%94%EB%93%9C",
    
    "relUrl": "/docs/studies/codingtest/1day1coding/230911/#결과-코드"
  },"139": {
    "doc": "TIL (23-09-11)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230911/#til",
    
    "relUrl": "/docs/tils/230911/#til"
  },"140": {
    "doc": "TIL (23-09-11)",
    "title": "2023.09.11 (MON)",
    "content": ". 📔 To Do (반드시!!) . | 😵‍💫 1일 1코테연습 . | 적록색약 | . | 🧑‍💻 퐁당 웹페이지 Ver.02 . | 오늘의 제작 일지 | . | . 😄 Want To Do (하고 싶은 것) . | AWS 워크샵 강의 . | AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기 | . | . ",
    "url": "/docs/tils/230911/#20230911-mon",
    
    "relUrl": "/docs/tils/230911/#20230911-mon"
  },"141": {
    "doc": "TIL (23-09-11)",
    "title": "TIL (23-09-11)",
    "content": " ",
    "url": "/docs/tils/230911/",
    
    "relUrl": "/docs/tils/230911/"
  },"142": {
    "doc": "TIL (23-09-12)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230912/#til",
    
    "relUrl": "/docs/tils/230912/#til"
  },"143": {
    "doc": "TIL (23-09-12)",
    "title": "2023.09.12 (TUE)",
    "content": ". 📔 To Do (반드시!!) . | AWS 자격증 시험 . | 기본 요약 - 3 | . | . 😄 Want To Do (하고 싶은 것) . ",
    "url": "/docs/tils/230912/#20230912-tue",
    
    "relUrl": "/docs/tils/230912/#20230912-tue"
  },"144": {
    "doc": "TIL (23-09-12)",
    "title": "TIL (23-09-12)",
    "content": " ",
    "url": "/docs/tils/230912/",
    
    "relUrl": "/docs/tils/230912/"
  },"145": {
    "doc": "TIL (23-09-13)",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils/230913/#til",
    
    "relUrl": "/docs/tils/230913/#til"
  },"146": {
    "doc": "TIL (23-09-13)",
    "title": "2023.09.13 (WED)",
    "content": ". AWS 자격증 시험 . SAA에서 DA로 변경하였다. 아무래도 지금 프로젝트와 직무 연관성이 DA쪽이 더 높은 것 같다고 판단하였다. 강의는 Udemy에서 제공하는 강사 스테판 마렉 (Stephane Maarek)의 AWS 자격증 강의이다. 평이 매우 좋고, 프리뷰를 봤는데 매우 호감이었다! . 글로벌 서비스는 리전 선택이 나오지 않는 것이 정상. EC2와 같은 서비스는 리전 선택이 필수. 또한, AWS의 모든 서비스는 모든 리전에 존재하는 것이 아니다. ",
    "url": "/docs/tils/230913/#20230913-wed",
    
    "relUrl": "/docs/tils/230913/#20230913-wed"
  },"147": {
    "doc": "TIL (23-09-13)",
    "title": "TIL (23-09-13)",
    "content": " ",
    "url": "/docs/tils/230913/",
    
    "relUrl": "/docs/tils/230913/"
  },"148": {
    "doc": "AWS (DA)",
    "title": "AWS 자격증 - AWS Certified Developer Associate (DA)",
    "content": " ",
    "url": "/docs/studies/aws_DA/#aws-%EC%9E%90%EA%B2%A9%EC%A6%9D---aws-certified-developer-associate-da",
    
    "relUrl": "/docs/studies/aws_DA/#aws-자격증---aws-certified-developer-associate-da"
  },"149": {
    "doc": "AWS (DA)",
    "title": "This Page has been written since August 19, 2023.",
    "content": "다음 사이트의 자료를 참고하였습니다. AWS Certified Developer Associate 시험 합격을 위한 모든 것! 덤프 . ",
    "url": "/docs/studies/aws_DA/#this-page-has-been-written-since-august-19-2023",
    
    "relUrl": "/docs/studies/aws_DA/#this-page-has-been-written-since-august-19-2023"
  },"150": {
    "doc": "AWS (DA)",
    "title": "AWS (DA)",
    "content": " ",
    "url": "/docs/studies/aws_DA/",
    
    "relUrl": "/docs/studies/aws_DA/"
  },"151": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "content": " ",
    "url": "/docs/studies/aws_DA/aws_lecture1/",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/"
  },"152": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "2023.09.11 (MON)",
    "content": ". ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#20230911-mon",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#20230911-mon"
  },"153": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "서버리스란?",
    "content": " ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EB%9E%80",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#서버리스란"
  },"154": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "패러다임의 전환",
    "content": ". | 물리적 머신 | Virtual machines (VM) . | ex) ec2 | 컴퓨터 및 장비 별로 버전 차이 등으로 종속성 문제가 발생하는 단점이 존재 | . | Containerization . | VM의 단점을 해소 | 필요에 따라 서버 증설 등의 여러가지 밑단의 내용들을 신경써야함 | . | Serverless . | AWS 차원에서 모든 리소스들을 추상화함. | 지속적인 스케일링 | 사용한 만큼만 과금 | 유지보수 ZERO | 때문에, 비즈니스 가치에 집중할 수 있다. | . | . ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#%ED%8C%A8%EB%9F%AC%EB%8B%A4%EC%9E%84%EC%9D%98-%EC%A0%84%ED%99%98",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#패러다임의-전환"
  },"155": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "서버리스란?",
    "content": ". | 서버 관리 필요없음 | 사용한 만큼만 지불 | 요청에 맞게 스케일링 | 높은 보안 수준 | . ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EB%9E%80-1",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#서버리스란-1"
  },"156": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "다양한 범주의 서버리스 서비스",
    "content": ". 출처 : AWS . | 대표적으로 AWS Lambda | 네모 표시는 실습 때, 살펴볼 내용 | . ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#%EB%8B%A4%EC%96%91%ED%95%9C-%EB%B2%94%EC%A3%BC%EC%9D%98-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%EC%84%9C%EB%B9%84%EC%8A%A4",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#다양한-범주의-서버리스-서비스"
  },"157": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "AWS Lambda",
    "content": " ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#aws-lambda",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#aws-lambda"
  },"158": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "AWS Lambda",
    "content": ". | 불필요한 서버 관리 | 자동 확장 | 고가용성 및 보안 | 사용한 만큼만 지불 | . 출처 : AWS . ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#aws-lambda-1",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#aws-lambda-1"
  },"159": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "AWS Lambda 사용 사례",
    "content": ". | Web Apps . | 정적 웹사이트 | 복합적 웹앱 | . | Backends . | 앱 &amp; 서비스 | 모바일 | IoT | . | Data Processing . | Real time | MaoReduce | Batch | . | Chatbots . | Powering chatbot loginc | . | etc | . ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#aws-lambda-%EC%82%AC%EC%9A%A9-%EC%82%AC%EB%A1%80",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#aws-lambda-사용-사례"
  },"160": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "Amazon API Gateway",
    "content": " ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#amazon-api-gateway",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#amazon-api-gateway"
  },"161": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "API Gateway는 API 기반 아키텍처의 관문",
    "content": "API : 응용프로그램과 운영체제 간의 통신을 연결해주는 인터페이스 . API Gateway : 서비스가 많아지면, 버전 관리 및 관리가 매우 힘들어진다. 이를 해소시켜주는 것. (like 정문 역할) . ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#api-gateway%EB%8A%94-api-%EA%B8%B0%EB%B0%98-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EC%9D%98-%EA%B4%80%EB%AC%B8",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#api-gateway는-api-기반-아키텍처의-관문"
  },"162": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "Amazon DynamoDB",
    "content": " ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#amazon-dynamodb",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#amazon-dynamodb"
  },"163": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "Amazon DynamoDB",
    "content": "대규모 성능에 최적화된 완전 관리형 NoSQL 데이터베이스 서비스 . | 서버리스 . | 유지관리 불필요 | 오토 스케일링 | 고가용성 및 내결함성 | . | 높은 성능 . | 초당 수백만의 요청 처리 및 짧은 지연시간 | 다른 AWS 서비스와 통합 | . | 보안 및 엑세스 . | 전송 중 및 저장 시 암호화 | . | . ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#amazon-dynamodb-1",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#amazon-dynamodb-1"
  },"164": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "Core Concepts - Tables, Items, Attributes, Indexes",
    "content": ". 출처 : AWS . | Primary Key를 잘 설계하는 것이 중요. | Unique하게 | . | . ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#core-concepts---tables-items-attributes-indexes",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#core-concepts---tables-items-attributes-indexes"
  },"165": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "데이터 베이스 확장",
    "content": ". | SQL . | 수직정 확장 | . | NoSQL . | 수평적 확장 : 다수의 샤드로 수평확장 | . | . ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B2%A0%EC%9D%B4%EC%8A%A4-%ED%99%95%EC%9E%A5",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#데이터-베이스-확장"
  },"166": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "실습",
    "content": " ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#%EC%8B%A4%EC%8A%B5",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#실습"
  },"167": {
    "doc": "AWS 강의 - AWS 서버리스로 서버 없이 간단한 웹 애플리케이션 만들기",
    "title": "실습 과정",
    "content": ". | Lambda 생성 | DynamoDB, API Gateway 생성 | . https://catalog.us-east-1.prod.workshops.aws/workshops/600420b7-5c4c-498f-9b80-bc7798963ba3/ko-KR/serverless . ",
    "url": "/docs/studies/aws_DA/aws_lecture1/#%EC%8B%A4%EC%8A%B5-%EA%B3%BC%EC%A0%95",
    
    "relUrl": "/docs/studies/aws_DA/aws_lecture1/#실습-과정"
  },"168": {
    "doc": "게임 서버 토이 프로젝트",
    "title": "Project - 게임 서버 토이 프로젝트",
    "content": " ",
    "url": "/docs/projects/gameServer/#project---%EA%B2%8C%EC%9E%84-%EC%84%9C%EB%B2%84-%ED%86%A0%EC%9D%B4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8",
    
    "relUrl": "/docs/projects/gameServer/#project---게임-서버-토이-프로젝트"
  },"169": {
    "doc": "게임 서버 토이 프로젝트",
    "title": "Project has been written since Aug 19, 2023.",
    "content": ". 게임 서버 토이 프로젝트 입니다. ",
    "url": "/docs/projects/gameServer/#project-has-been-written-since-aug-19-2023",
    
    "relUrl": "/docs/projects/gameServer/#project-has-been-written-since-aug-19-2023"
  },"170": {
    "doc": "게임 서버 토이 프로젝트",
    "title": "게임 서버 토이 프로젝트",
    "content": " ",
    "url": "/docs/projects/gameServer/",
    
    "relUrl": "/docs/projects/gameServer/"
  },"171": {
    "doc": "Hoooon22's Log",
    "title": "Hoooon22’s Log",
    "content": "Web &amp; Server Delveloper . ",
    "url": "/#hoooon22s-log",
    
    "relUrl": "/#hoooon22s-log"
  },"172": {
    "doc": "Hoooon22's Log",
    "title": "Hoooon22's Log",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  },"173": {
    "doc": "오브젝트",
    "title": "Obejct &amp; OOP",
    "content": " ",
    "url": "/docs/studies/object/#obejct--oop",
    
    "relUrl": "/docs/studies/object/#obejct--oop"
  },"174": {
    "doc": "오브젝트",
    "title": "This Page has been written since August 08, 2023.",
    "content": "참고 서적 : “오브젝트”, 조영호 . ",
    "url": "/docs/studies/object/#this-page-has-been-written-since-august-08-2023",
    
    "relUrl": "/docs/studies/object/#this-page-has-been-written-since-august-08-2023"
  },"175": {
    "doc": "오브젝트",
    "title": "오브젝트",
    "content": " ",
    "url": "/docs/studies/object/",
    
    "relUrl": "/docs/studies/object/"
  },"176": {
    "doc": "퐁당 웹 매거진 프로젝트",
    "title": "Project - 퐁당 웹 매거진 프로젝트 Ver.02",
    "content": " ",
    "url": "/docs/projects/pongdang/#project---%ED%90%81%EB%8B%B9-%EC%9B%B9-%EB%A7%A4%EA%B1%B0%EC%A7%84-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-ver02",
    
    "relUrl": "/docs/projects/pongdang/#project---퐁당-웹-매거진-프로젝트-ver02"
  },"177": {
    "doc": "퐁당 웹 매거진 프로젝트",
    "title": "Project has been written since July 1, 2023.",
    "content": ". | Links | . 퐁당 웹 매거진 프로젝트 Ver.01 제작 일지 . 퐁당 웹 매거진 프로젝트 Ver.01 Github(private) . 퐁당 웹 매거진 프로젝트 Ver.02 제작 일지 . 퐁당 웹 매거진 프로젝트 Ver.02 Github(public) . ",
    "url": "/docs/projects/pongdang/#project-has-been-written-since-july-1-2023",
    
    "relUrl": "/docs/projects/pongdang/#project-has-been-written-since-july-1-2023"
  },"178": {
    "doc": "퐁당 웹 매거진 프로젝트",
    "title": "퐁당 웹 매거진 프로젝트",
    "content": " ",
    "url": "/docs/projects/pongdang/",
    
    "relUrl": "/docs/projects/pongdang/"
  },"179": {
    "doc": "Portfolio",
    "title": "Portfolio",
    "content": "Just the Docs gives your documentation a jumpstart with a responsive Jekyll theme that is easily customizable and hosted on GitHub Pages. ",
    "url": "/docs/portfolio/",
    
    "relUrl": "/docs/portfolio/"
  },"180": {
    "doc": "Portfolio",
    "title": "🙋🏻 Profile",
    "content": ". 학력 . | 동국대학교 컴퓨터공학과 (2018.03 ~ 2023.02) | . 기타 . | 동국대학교 인간-로봇 상호작용 연구실 학부연구생 (2019.07 ~ 2021.04) | . 웹 제작 &amp; 서버 &amp; 데이터베이스 프로그래밍 개발자를 희망하는 ‘거북이🐢’ 김지훈입니다. 앞으로 나아가는 속도는 느릴지라도, 쓰러지지 않는 단단함을 지녔습니다. 저의 프로그램과 서비스로 모두에게 행복함을 선물할 수 있는 개발자가 될 것입니다. ",
    "url": "/docs/portfolio/#profile",
    
    "relUrl": "/docs/portfolio/#profile"
  },"181": {
    "doc": "Portfolio",
    "title": "⚒️ Skills",
    "content": "역량의 전문성에 따라 상 · 중 · 하 수준으로 분류하였습니다. 각 항목을 누르면 상세 내용을 확인할 수 있습니다. Hard Skills . Soft Skills . Tools . | Backend | Database . MySQL . ORACLE . | Frontend . HTML . CSS . Javascript . React . | DevOps . Docker . | 커뮤니케이션 스킬 | 책임감 | 협업 능력 | 리더십 | 유연성 | 체계성 . | C/C++ | Java/Spring | HTML/CSS/JS | Python | Node.js | MySQL | ORACLE | Linux | Docker | Unity | AWS | . ",
    "url": "/docs/portfolio/#%EF%B8%8F-skills",
    
    "relUrl": "/docs/portfolio/#️-skills"
  },"182": {
    "doc": "Portfolio",
    "title": "💻 Projects",
    "content": "지금까지 진행했던 프로젝트를 최신순으로 구성했습니다. 각 이미지를 클릭하면, 해당 프로젝트에 대한 상세 내용을 확인할 수 있습니다. ",
    "url": "/docs/portfolio/#-projects",
    
    "relUrl": "/docs/portfolio/#-projects"
  },"183": {
    "doc": "Portfolio",
    "title": "🕶️ Github &amp; Study",
    "content": " ",
    "url": "/docs/portfolio/#%EF%B8%8Fgithub--study",
    
    "relUrl": "/docs/portfolio/#️github--study"
  },"184": {
    "doc": "Portfolio",
    "title": "Github &amp; Site",
    "content": "Github . 거북이처럼 코딩해도 괜찮으려나 → 2022/05/18 부터 Notion으로 이전 . Hoooon22’s Log → 2023/06/29 부터 github.io으로 이전 . ",
    "url": "/docs/portfolio/#github--site",
    
    "relUrl": "/docs/portfolio/#github--site"
  },"185": {
    "doc": "Portfolio",
    "title": "Previous Study",
    "content": "TIL(Today I Learned) . 개인 개발 &amp; 공부 . 매거진 퐁당 웹사이트 제작 . ",
    "url": "/docs/portfolio/#previous-study",
    
    "relUrl": "/docs/portfolio/#previous-study"
  },"186": {
    "doc": "Portfolio",
    "title": "💬 Contact",
    "content": "📧 momo990305@gmail.com . 📞 +82 10-3820-7501 . 🏠 경기도 화성시 . ",
    "url": "/docs/portfolio/#contact",
    
    "relUrl": "/docs/portfolio/#contact"
  },"187": {
    "doc": "Projects",
    "title": "Project",
    "content": "Project has been written since July 1, 2023. ",
    "url": "/docs/projects#project",
    
    "relUrl": "/docs/projects#project"
  },"188": {
    "doc": "Projects",
    "title": "Projects",
    "content": " ",
    "url": "/docs/projects",
    
    "relUrl": "/docs/projects"
  },"189": {
    "doc": "STUDY",
    "title": "공부",
    "content": "This Page has been written since July 17, 2023. ",
    "url": "/docs/studies#%EA%B3%B5%EB%B6%80",
    
    "relUrl": "/docs/studies#공부"
  },"190": {
    "doc": "STUDY",
    "title": "STUDY",
    "content": " ",
    "url": "/docs/studies",
    
    "relUrl": "/docs/studies"
  },"191": {
    "doc": "AWS 기초 - 1",
    "title": "AWS 기초 - 1",
    "content": " ",
    "url": "/docs/studies/aws_DA/summary_1/",
    
    "relUrl": "/docs/studies/aws_DA/summary_1/"
  },"192": {
    "doc": "AWS 기초 - 1",
    "title": "2023.08.19 (SAT)",
    "content": ". ",
    "url": "/docs/studies/aws_DA/summary_1/#20230819-sat",
    
    "relUrl": "/docs/studies/aws_DA/summary_1/#20230819-sat"
  },"193": {
    "doc": "AWS 기초 - 1",
    "title": "1. 온프라미스와 AWS 용어 비교",
    "content": "AWS는 아마존에서 온프레미스를 클라우드 서비스로 만든 것이다. 온프라미스(On-premise)란, 기업의 서버를 클라우드 같은 원격 환경에서 운영하는 방식이 아닌, 자체적으로 보유한 전산실 서버에 직접 설치해 운영하는 방식이다. – . 온프라미스 용어 = 클라우드 용어 . | 방화벽 = 보안그룹 | ACL = NACL . | ACL(Access Control List) : 허가되지 않은 이용자가 라우터나 네트워크의 특정 자원을 접근하려고 하는 것을 차단한다. | . | 관리자 권한 = IAM | L4, 로드 밸런서 = ELB(일라스틱 로드 밸런서), 탄력적인 로드 밸련서, ALB, … . | 로드 밸런서 : 서버에 가해지는 부사(=로드)를 분산(=밸런싱)해주는 장치 또는 기술 | . | 네트워크 = VPC . | VPC는 Virtual Private Cloud로, 정의한 논리적으로 격리된 가상 네트워크에서 AWS 리소스를 시작할 수 있다. | . | 서버 = EC2(일라스틱 컴퓨트 클라우드), C2 | NAS = EFS(탄력적인 파일 시스템) . | NAS란, 네트워크 연결 스토리지로, 네트워크를 통해 효과적으로 협업할 수 있도록 데이터를 지속적으로 사용할 수 있게 하는 파일 전용 스토리지 디바이스이다. | 많은 곳에서 NAS를 사용하는 이유 : 확장 가능하며, 저렴한 스토리지를 제공하기 때문. | . | . | 디스크 = EBS (탄력적인 블록 스토어 저장장치) | DB = RDS (관계형 데이터 베이스) | . ",
    "url": "/docs/studies/aws_DA/summary_1/#1-%EC%98%A8%ED%94%84%EB%9D%BC%EB%AF%B8%EC%8A%A4%EC%99%80-aws-%EC%9A%A9%EC%96%B4-%EB%B9%84%EA%B5%90",
    
    "relUrl": "/docs/studies/aws_DA/summary_1/#1-온프라미스와-aws-용어-비교"
  },"194": {
    "doc": "AWS 기초 - 1",
    "title": "2. AWS의 기본 구성",
    "content": ". | 사용자가 서비스를 사용하는 과정 . | 특정 서비스에 연결하려면 도메인 질의를 한다. | DNS 서비스가 응답을 한다. | 해당 도메인을 IP로 변환하여 서버에 연결한다. | 서버의 디스크의 데이터를 읽는다.(?) | 따로 요청한 데이터를 디비에서 읽어온다. | 스토리지에 저장된 이미지나 파일들을 다운받아 사용한다. | . | AWS 용어로 치환 가능하다. | Route53이 도메인에 대한 응답을 한다. (참고로 DNS포트가 53이라, Route53이다.) | 서버 EC2로 접속한다. | 로컬 디스크인 EBS에서 데이터를 읽는다. | 비지니스적으로 요청한 데이터가 있으면, Amazon DB에서 읽어온다. | S3 등등 | . | . ",
    "url": "/docs/studies/aws_DA/summary_1/#2-aws%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B5%AC%EC%84%B1",
    
    "relUrl": "/docs/studies/aws_DA/summary_1/#2-aws의-기본-구성"
  },"195": {
    "doc": "AWS 기초 - 1",
    "title": "3. 온프레미스, 클라우드, 하이브리드…",
    "content": ". | 온 프레미스 : 일반 데이터 센터, 물리 서버로 운영하는 데이터 센터 | 하이브리드 : 클라우드 + 온프레미스 | 클라우드 : AWS, AZURE, GCP 등 유료서비스 | 멀티클라우드 : 여러 개의 퍼블릭 클라우드를 사용하는 경우 | . ",
    "url": "/docs/studies/aws_DA/summary_1/#3-%EC%98%A8%ED%94%84%EB%A0%88%EB%AF%B8%EC%8A%A4-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%ED%95%98%EC%9D%B4%EB%B8%8C%EB%A6%AC%EB%93%9C",
    
    "relUrl": "/docs/studies/aws_DA/summary_1/#3-온프레미스-클라우드-하이브리드"
  },"196": {
    "doc": "AWS 기초 - 1",
    "title": "4. AZ",
    "content": "AZ란, 가용영역으로 한 리전에 여러 AZ가 존재한다. ex) 서울 리전, 도쿄 리전. 아마존 서버가 존재하는 곳이다. AZ끼리는 전용선으로 연결되어 있기 때문에, 빠르게 데이터를 주고 받을 수 있다. ",
    "url": "/docs/studies/aws_DA/summary_1/#4-az",
    
    "relUrl": "/docs/studies/aws_DA/summary_1/#4-az"
  },"197": {
    "doc": "AWS 기초 - 1",
    "title": "5. AWS 엣지 인프라 서비스",
    "content": "(1). AWS Outposts . 클라우드를 온프라미스에서도 쓸 수 있도록 확장한 것. (2). AWS Local Zones . 대형 메트로 센터를 사용한 엣지 서비스 . 엣지 컴퓨팅 : 정보 저장 및 컴퓨팅 능력을 사용자에게 더 가까이 제공하는 프로세스 . (3). AWS Wavelength . 5G 네트워크 엣지 서비스 통신사에서 클라우드 서비스 하는 것이다. ",
    "url": "/docs/studies/aws_DA/summary_1/#5-aws-%EC%97%A3%EC%A7%80-%EC%9D%B8%ED%94%84%EB%9D%BC-%EC%84%9C%EB%B9%84%EC%8A%A4",
    
    "relUrl": "/docs/studies/aws_DA/summary_1/#5-aws-엣지-인프라-서비스"
  },"198": {
    "doc": "AWS 기초 - 2",
    "title": "AWS 기초 - 2",
    "content": " ",
    "url": "/docs/studies/aws_DA/summary_2/",
    
    "relUrl": "/docs/studies/aws_DA/summary_2/"
  },"199": {
    "doc": "AWS 기초 - 2",
    "title": "2023.09.04 (MON)",
    "content": ". ",
    "url": "/docs/studies/aws_DA/summary_2/#20230904-mon",
    
    "relUrl": "/docs/studies/aws_DA/summary_2/#20230904-mon"
  },"200": {
    "doc": "AWS 기초 - 2",
    "title": "1. 서버",
    "content": "(1). EC2 . | Elastic Compute Cloud의 줄임말이다. | C가 2개여서 EC2이다. | . (2). 인스턴스 패밀리 . | AWS 인스턴스 : 가상 컴퓨팅 환경으로 애플리케이션을 배포, 관리 및 확장하는데 도움이 되는 수많은 추가 기능 제공 | 인스턴스 표기법 . | | 인스턴스 패밀리 : M, T, C, X, R, IO, … (각 기능이 다르다.) | 인스턴스 세대 : 인스턴스 패밀리에 따라, 1~5세대 | 인스턴스 크기 : 인스턴스 패밀리 및 세대에 따라 다양한 크기 제공 | . | . ",
    "url": "/docs/studies/aws_DA/summary_2/#1-%EC%84%9C%EB%B2%84",
    
    "relUrl": "/docs/studies/aws_DA/summary_2/#1-서버"
  },"201": {
    "doc": "AWS 기초 - 2",
    "title": "2. EC2 요금",
    "content": ". | 온디맨드 인스턴스 | 예약 인스턴스 | Savings Plan | 스팟 인스턴스 | . ",
    "url": "/docs/studies/aws_DA/summary_2/#2-ec2-%EC%9A%94%EA%B8%88",
    
    "relUrl": "/docs/studies/aws_DA/summary_2/#2-ec2-요금"
  },"202": {
    "doc": "AWS 기초 - 2",
    "title": "3. 대표적인 컨테이너 관리형 서비스",
    "content": ". | . | ECS . | 간편 관리형 서비스 | AWS 전용이다. | 컨테이너가 소수일 때 커맨드로 관리 가능하지만, 많아지면 관리가 힘들어져 관리형 서비스를 사용한다. | ECS는 AWS에서 인프라를 관리해주며, 확장 등이 쉽게 가능하다. | . | . | . | EKS . | 쿠버네티스 사용의 관리 리소스가 포함됨 | 관리시간이 줄어듬 | 마스터노드의 관리를 AWS가 해줌 | 사용자는 워커노드만 관리하면 된다. | . | 워커노드 : 배포하고자 하는 어플리케이션의 실제 실행을 수행 - 마스터 서버로는 API 서버로 명령만 내릴 수 있다. - 별도의 AWS VPC에 마스터 서버가 구성된다. (사용자는 접근 불가) | . | . | . ",
    "url": "/docs/studies/aws_DA/summary_2/#3-%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EA%B4%80%EB%A6%AC%ED%98%95-%EC%84%9C%EB%B9%84%EC%8A%A4",
    
    "relUrl": "/docs/studies/aws_DA/summary_2/#3-대표적인-컨테이너-관리형-서비스"
  },"203": {
    "doc": "AWS 기초 - 2",
    "title": "4, 람다",
    "content": ". | 대표적인 서버리스 컴퓨팅 (이 또한 관리형 서비스) | 서버 처리가 이벤트 방식이다. (람다는 이벤트 발생 시 트래픽 처리됨) | 사용자가 확장 등을 고려할 필요가 없다. | 거의 모든 것이 자동으로 처리된다. | . ",
    "url": "/docs/studies/aws_DA/summary_2/#4-%EB%9E%8C%EB%8B%A4",
    
    "relUrl": "/docs/studies/aws_DA/summary_2/#4-람다"
  },"204": {
    "doc": "AWS 기초 - 3",
    "title": "AWS 기초 - 3",
    "content": " ",
    "url": "/docs/studies/aws_DA/summary_3/",
    
    "relUrl": "/docs/studies/aws_DA/summary_3/"
  },"205": {
    "doc": "AWS 기초 - 3",
    "title": "2023.09.04 (MON)",
    "content": ". ",
    "url": "/docs/studies/aws_DA/summary_3/#20230904-mon",
    
    "relUrl": "/docs/studies/aws_DA/summary_3/#20230904-mon"
  },"206": {
    "doc": "AWS 기초 - 3",
    "title": "스토리지, 데이터 베이스",
    "content": " ",
    "url": "/docs/studies/aws_DA/summary_3/#%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B2%A0%EC%9D%B4%EC%8A%A4",
    
    "relUrl": "/docs/studies/aws_DA/summary_3/#스토리지-데이터-베이스"
  },"207": {
    "doc": "AWS 기초 - 3",
    "title": "1. AWS 스토리지 옵션",
    "content": "(1). Options . | S3 : 오브젝트 스토리지, 일반 스토리지 | S3 Glacier : S3 중 장기 보관용으로 저렴하다. | EFS : 공유 파일 스토리지, NAS와 같다. | NAS란, 네트워크를 통해 효과적으로 협업할 수 있도록 데이터를 지속적으로 사용할 수 있게 하는 파일 전용 스토리지 디바이스 | . | Storage Gateway | EBS - EC2에서 사용하는 디스크 저장소 | . ",
    "url": "/docs/studies/aws_DA/summary_3/#1-aws-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%98%B5%EC%85%98",
    
    "relUrl": "/docs/studies/aws_DA/summary_3/#1-aws-스토리지-옵션"
  },"208": {
    "doc": "TIL",
    "title": "Today I Learned",
    "content": "TIL has been written since July 1, 2023. ",
    "url": "/docs/tils#today-i-learned",
    
    "relUrl": "/docs/tils#today-i-learned"
  },"209": {
    "doc": "TIL",
    "title": "TIL",
    "content": " ",
    "url": "/docs/tils",
    
    "relUrl": "/docs/tils"
  }
}
